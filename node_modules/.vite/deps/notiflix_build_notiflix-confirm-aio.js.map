{
  "version": 3,
  "sources": ["../../notiflix/build/notiflix-confirm-aio.js"],
  "sourcesContent": ["/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.7\n* Author: Furkan (https://github.com/furcan)\n* Copyright 2019 - 2024 Notiflix, MIT License (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\n    return false;\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // CONFIRM: Default Settings: begin\n  var typesConfirm = {\n    Show: 'Show',\n    Ask: 'Ask',\n    Prompt: 'Prompt',\n  };\n  var newConfirmSettings;\n  var confirmSettings = {\n    ID: 'NotiflixConfirmWrap', // can not customizable\n    className: 'notiflix-confirm',\n    width: '300px',\n    zindex: 4003,\n    position: 'center', // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\n    distance: '10px',\n    backgroundColor: '#f8f8f8',\n    borderRadius: '25px',\n    backOverlay: true,\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n    rtl: false,\n    fontFamily: 'Quicksand',\n    cssAnimation: true,\n    cssAnimationDuration: 300,\n    cssAnimationStyle: 'fade', // 'zoom' - 'fade'\n    plainText: true,\n\n    titleColor: '#32c682',\n    titleFontSize: '16px',\n    titleMaxLength: 34,\n\n    messageColor: '#1e1e1e',\n    messageFontSize: '14px',\n    messageMaxLength: 110,\n\n    buttonsFontSize: '15px',\n    buttonsMaxLength: 34,\n    okButtonColor: '#f8f8f8',\n    okButtonBackground: '#32c682',\n    cancelButtonColor: '#f8f8f8',\n    cancelButtonBackground: '#a9a9a9',\n  };\n  // CONFIRM: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\n    if (!element) { element = 'head'; }\n    if (window.document[element] === null) {\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n      return false;\n    }\n    return true;\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\n    // check doc head\n    if (!commonCheckHeadOrBody('head')) { return false; }\n\n    // internal css\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\n      var internalCSS = window.document.createElement('style');\n      internalCSS.id = styleElementId;\n      internalCSS.innerHTML = getInternalCSSCodes();\n      window.document.head.appendChild(internalCSS);\n    }\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\n    // variables\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    // check if a deep merge\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    }\n    // merge the object into the extended object\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // if property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    };\n    // loop through each object and conduct a merge\n    for (; i < arguments.length; i++) {\n      merge(arguments[i]);\n    }\n    return extended;\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\n    var htmlPool = window.document.createElement('div');\n    htmlPool.innerHTML = html;\n    return htmlPool.textContent || htmlPool.innerText || '';\n  };\n  // COMMON: Get Plaintext: end\n\n  // CONFIRM: Get Internal CSS Codes: begin\n  var confirmGetInternalCSSCodes = function () {\n    var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\n    return confirmCSS || null;\n  };\n  // CONFIRM: Get Internal CSS Codes: end\n\n  // CONFIRM: Create: begin\n  var confirmCreate = function (confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n    // check doc body\n    if (!commonCheckHeadOrBody('body')) { return false; }\n\n    // if not initialized pretend like init\n    if (!newConfirmSettings) {\n      Notiflix.Confirm.init({});\n    }\n\n    // create a backup for new settings\n    var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\n\n    // check the \"options\": begin\n    if (typeof options === 'object' && !Array.isArray(options)) {\n      // extend new settings with the new options\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\n    }\n    // check the \"options\": end\n\n    // check the arguments: begin\n    if (typeof title !== 'string') { title = 'Notiflix Confirm'; }\n    if (typeof messageOrQuestion !== 'string') { messageOrQuestion = 'Do you agree with me?'; }\n    if (typeof okButtonText !== 'string') { okButtonText = 'Yes'; }\n    if (typeof cancelButtonText !== 'string') { cancelButtonText = 'No'; }\n    if (typeof okButtonCallback !== 'function') { okButtonCallback = undefined; }\n    if (typeof cancelButtonCallback !== 'function') { cancelButtonCallback = undefined; }\n    // check the arguments: end\n\n    // if plainText is true => HTML tags not allowed: begin\n    if (newConfirmSettings.plainText) {\n      title = commonGetPlaintext(title);\n      messageOrQuestion = commonGetPlaintext(messageOrQuestion);\n      okButtonText = commonGetPlaintext(okButtonText);\n      cancelButtonText = commonGetPlaintext(cancelButtonText);\n    }\n    // if plainText is true => HTML tags not allowed: end\n\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\n    if (!newConfirmSettings.plainText) {\n      if (title.length > newConfirmSettings.titleMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n      if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n    }\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\n\n    // max length: begin\n    if (title.length > newConfirmSettings.titleMaxLength) {\n      title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\n    }\n    if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n      messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\n    }\n    if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    }\n    if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    }\n    // max length: end\n\n    // if cssAnimaion is false => duration: begin\n    if (!newConfirmSettings.cssAnimation) {\n      newConfirmSettings.cssAnimationDuration = 0;\n    }\n    // if cssAnimaion is false => duration: end\n\n    // confirm wrap: begin\n    var ntflxConfirmWrap = window.document.createElement('div');\n    ntflxConfirmWrap.id = confirmSettings.ID;\n    ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle : '');\n    ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\n    ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\n\n    // rtl: begin\n    if (newConfirmSettings.rtl) {\n      ntflxConfirmWrap.setAttribute('dir', 'rtl');\n      ntflxConfirmWrap.classList.add('nx-rtl-on');\n    }\n    // rtl: end\n\n    // position: begin\n    var confirmPosition = typeof newConfirmSettings.position === 'string' ? newConfirmSettings.position.trim() : 'center';\n    ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition);\n    // position: end\n\n    // font-family\n    ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\n\n    // if background overlay is true: begin\n    var confirmOverlay = '';\n    if (newConfirmSettings.backOverlay) {\n      confirmOverlay = '<div class=\"' + newConfirmSettings.className + '-overlay' + (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') + '\" style=\"background:' + newConfirmSettings.backOverlayColor + ';animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\n    }\n    // if background overlay is true: end\n\n    // if have a callback => add cancel button: begin\n    var cancelButtonHTML = '';\n    if (typeof okButtonCallback === 'function') {\n      cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + ';background:' + newConfirmSettings.cancelButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + '</a>';\n    }\n    // if have a callback => add cancel button: end\n\n    // check the validation module: begin\n    var setValidationInput = '';\n    var theExpectedAnswer = null;\n    var theClientAnswer = undefined;\n    if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\n      theExpectedAnswer = answer || '';\n      var inputMaxLength = (confirmType === typesConfirm.Ask) ? Math.ceil(theExpectedAnswer.length * 1.5) : (theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250);\n      var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? ('value=\"' + theExpectedAnswer + '\"') : '';\n      setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + ';border-radius: ' + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\n    }\n    // check the validation module: end\n\n    // confirm wrap content: begin\n    ntflxConfirmWrap.innerHTML = confirmOverlay +\n      '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + '; background:' + newConfirmSettings.backgroundColor + '; animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms; border-radius: ' + newConfirmSettings.borderRadius + ';\">' +\n      '<div class=\"' + newConfirmSettings.className + '-head\">' +\n      '<h5 style=\"color:' + newConfirmSettings.titleColor + ';font-size:' + newConfirmSettings.titleFontSize + ';\">' + title + '</h5>' +\n      '<div style=\"color:' + newConfirmSettings.messageColor + ';font-size:' + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + '</div>' +\n      '</div>' +\n      '<div class=\"' + newConfirmSettings.className + '-buttons\">' +\n      '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === 'function' ? '' : ' nx-full') + '\" style=\"color:' + newConfirmSettings.okButtonColor + ';background:' + newConfirmSettings.okButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + '</a>' +\n      cancelButtonHTML +\n      '</div>' +\n      '</div>';\n    // confirm wrap content: end\n    // confirm wrap: end\n\n    // if there is no confirm box: begin\n    if (!window.document.getElementById(ntflxConfirmWrap.id)) {\n      window.document.body.appendChild(ntflxConfirmWrap);\n\n      // buttons && input listener: begin\n      var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\n      var okButton = window.document.getElementById('NXConfirmButtonOk');\n\n      // validation input listener: begin\n      var validationInput = window.document.getElementById('NXConfirmValidationInput');\n      if (validationInput) {\n        validationInput.focus();\n        validationInput.setSelectionRange(0, (validationInput.value || '').length);\n        validationInput.addEventListener('keyup', function (event) {\n          var thisValue = event.target.value;\n          if (\n            (confirmType === typesConfirm.Ask) &&\n            (thisValue !== theExpectedAnswer)\n          ) {\n            event.preventDefault();\n            validationInput.classList.add('nx-validation-failure');\n            validationInput.classList.remove('nx-validation-success');\n          } else {\n            if (confirmType === typesConfirm.Ask) {\n              validationInput.classList.remove('nx-validation-failure');\n              validationInput.classList.add('nx-validation-success');\n            }\n            var isEnter = (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\n            if (isEnter) {\n              okButton.dispatchEvent(new Event('click'));\n            }\n          }\n        });\n      }\n      // validation input listener: end\n\n      // ok button listener: begin\n      okButton.addEventListener('click', function (event) {\n        // check the answer if the type is \"Ask\": begin\n        if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\n          var inputValue = (validationInput.value || '').toString();\n          if (inputValue !== theExpectedAnswer) {\n            validationInput.focus();\n            validationInput.classList.add('nx-validation-failure');\n            event.stopPropagation();\n            event.preventDefault();\n            event.returnValue = false;\n            event.cancelBubble = true;\n            return false;\n          } else {\n            validationInput.classList.remove('nx-validation-failure');\n          }\n        }\n        // check the answer if the type is \"Ask\": end\n\n        // if ok callback && if ok callback is a function\n        if (typeof okButtonCallback === 'function') {\n          if (confirmType === typesConfirm.Prompt && validationInput) {\n            theClientAnswer = validationInput.value || '';\n          }\n          okButtonCallback(theClientAnswer);\n        }\n        confirmCloseWrap.classList.add('nx-remove');\n\n        var timeout = setTimeout(function () {\n          if (confirmCloseWrap.parentNode !== null) {\n            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n            clearTimeout(timeout);\n          }\n        }, newConfirmSettings.cssAnimationDuration);\n      });\n      // ok button listener: end\n\n      // if ok callback && if ok callback a function => add Cancel Button listener: begin\n      if (typeof okButtonCallback === 'function') {\n        // cancel button listener: begin\n        var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\n        cancelButton.addEventListener('click', function () {\n          // if cancel callback && if cancel callback a function\n          if (typeof cancelButtonCallback === 'function') {\n            if (confirmType === typesConfirm.Prompt && validationInput) {\n              theClientAnswer = validationInput.value || '';\n            }\n            cancelButtonCallback(theClientAnswer);\n          }\n          confirmCloseWrap.classList.add('nx-remove');\n\n          var timeout = setTimeout(function () {\n            if (confirmCloseWrap.parentNode !== null) {\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n              clearTimeout(timeout);\n            }\n          }, newConfirmSettings.cssAnimationDuration);\n        });\n        // cancel button listener: end\n      }\n      // if ok callback && if ok callback a function => add Cancel Button listener: end\n      // buttons && input listener: end\n    }\n    // if there is no confirm box: end\n\n    // extend new settings with the backup settings\n    newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\n  };\n  // CONFIRM: Create: end\n\n  var Notiflix = {\n    Confirm: {\n      // Init\n      init: function (userConfirmOptions) {\n        // extend options\n        newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\n        // internal css if exist\n        commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\n      },\n      // Merge First Init\n      merge: function (userConfirmExtendOptions) {\n        // if initialized already\n        if (newConfirmSettings) {\n          newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\n        }\n        // initialize first\n        else {\n          commonConsoleError('You have to initialize the Confirm module before call Merge function.');\n          return false;\n        }\n      },\n      // Show\n      show: function (title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Ask\n      ask: function (title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Prompt\n      prompt: function (title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Confirm: Notiflix.Confirm });\n  } else {\n    return { Confirm: Notiflix.Confirm };\n  }\n\n});"],
  "mappings": "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",
  "names": ["window"]
}
